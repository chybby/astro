---
import type { InferGetStaticParamsType, InferGetStaticPropsType, GetStaticPaths } from 'astro';

import { getCollection } from "astro:content";
import BaseLayout from '@layouts/BaseLayout.astro';
import BlogPostLink from '@components/BlogPostLink.astro';

export const getStaticPaths = (async () => {
    const allPosts = await getCollection("posts");
    const uniqueTags: string[] = [...new Set(allPosts.map((post) => post.data.tags).flat())];

    return uniqueTags.map((tag) => {
        const filteredPosts = allPosts.filter((post) => post.data.tags.includes(tag));
        return {
            params: { tag },
            props: { posts: filteredPosts },
        };
    });
}) satisfies GetStaticPaths;

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
const { tag } = Astro.params as Params;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;
const { posts } = Astro.props;
---

<BaseLayout pageTitle={tag}>
    <p>Posts tagged with {tag}</p>
    <ul>
        {posts.map((post) => <BlogPostLink post={post}/>)}
    </ul>
</BaseLayout>
